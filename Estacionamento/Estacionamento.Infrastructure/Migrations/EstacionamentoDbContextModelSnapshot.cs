// <auto-generated />
using System;
using Estacionamento.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Estacionamento.Infrastructure.Migrations
{
    [DbContext(typeof(EstacionamentoDbContext))]
    partial class EstacionamentoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Estacionamento.Domain.Entities.Carro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("Estacionamento.Domain.Entities.Ocupacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CarroId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Entrada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Saida")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VagaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarroId");

                    b.HasIndex("VagaId")
                        .IsUnique();

                    b.ToTable("Ocupacoes");
                });

            modelBuilder.Entity("Estacionamento.Domain.Entities.Vaga", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ocupada")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("Estacionamento.Domain.Entities.Ocupacao", b =>
                {
                    b.HasOne("Estacionamento.Domain.Entities.Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Estacionamento.Domain.Entities.Vaga", "Vaga")
                        .WithOne("OcupacaoAtual")
                        .HasForeignKey("Estacionamento.Domain.Entities.Ocupacao", "VagaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carro");

                    b.Navigation("Vaga");
                });

            modelBuilder.Entity("Estacionamento.Domain.Entities.Vaga", b =>
                {
                    b.Navigation("OcupacaoAtual");
                });
#pragma warning restore 612, 618
        }
    }
}
